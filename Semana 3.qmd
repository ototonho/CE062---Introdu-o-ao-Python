---
title: "Semana 3"
format: html
editor: visual
---

## Arrays

### Maniupalção de arrays

### O Módulo Array

#### Criando um array

```{python}
import array

array.array('typecode', [elemento])

```

##### Exemplo de criação de array

```{python}
import array
# criando uma lista de inteiros (typecode 'i')

numeros_inteiros = array.array('i', [1, 2, 3, 4, 5])
type(numeros_inteiros)
print(numeros_inteiros)
```

##### Exemplo 2

```{python}
# tentar usar tipos mistos gera erro
try:
  array.array('i', [1, 2, 'texto'])
except TypeError as e:
  print(f"\nErro: {e}")
```

### Indexação, slicing e laços

```{python}
import array as arr
a = arr.array('i', [10, 20, 30, 40, 50])
a[0], a[2], a[-1]
a[:3], a[1:4], a[::2] # fatias

for x in a:
  print(x)
  
for i in range(len(a)):
  print(i, a[i]) # por índice
  
```

### Modificar, inserir e remover

```{python}
a = arr.array('i', [10, 20, 30])
a[1] = 99 #altera
a.append(40) #+1 valor
a.extend([50, 60]) #+ vários
a.insert(1, 15) # insere na posição 1
a.remove(10) # remove a 1ª ocorrência do valor 10
x = a.pop(2) # remove pelo índice 2

```

### Onde o array se destaca (e onde não)

- **Vantagens**:
  - Memória: 
  
- **Limitações**:
  - 
  
```{python}
import array
meu_array = array.array('i', [10, 20, 30])
# print(f"resultado com loop: {resultador}")

resultado = array.array('i', [elemento * 2 for elemento in meu_array])
print(f"resultado com loop: {resultado}")

```

## Pacote Numpy

Numpy significa "Numerical Python", iniciado em 2006 e é usado para computação científica e análise de dados. A documentação base se encontra em [no site da Numpy](https://numpy.org/)

### Arrays n-dimensionais

Vetores, matrizes e matrizes 3D. 

Instalando o **Numpy**


```{python}
reticulate::py_install("numpy")
```


```{python}
import numpy as np

A = np.array([[[1,2],[3,4]],[[4,6],[7,8]],[[9,10],[11,12]]])
A[0,0,0] # ou A [0][0]{0} 
A[1,1,1]

import numpy as np
a = np.array([1, 2, 3, 4, 5])
b = np.array([5, 6, 7, 8, 9])
a*3+b
type(a)
```

```{python}
import numpy as np

# Array Numpy
meu_array = np.array()
```

#### Slicing

```{python}

print(r.y)


```

